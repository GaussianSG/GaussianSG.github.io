name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        static_site_generator: next

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Clean config conflicts
      run: |
        # Remove any conflicting next.config.js if it exists
        if [ -f "next.config.js" ]; then
          echo "Removing conflicting next.config.js"
          rm next.config.js
        fi
        # Ensure we're using the TypeScript config
        echo "Using next.config.ts:"
        cat next.config.ts

    - name: Build project
      env:
        NODE_ENV: production
      run: |
        echo "Starting Next.js build..."
        echo "Next.js version:"
        npx next --version
        echo "Node version:"
        node --version
        echo "Current config:"
        cat next.config.ts
        pnpm run build
        echo "Build completed. Checking build output..."
        ls -la
        if [ ! -d "out" ]; then
          echo "ERROR: out directory was not created!"
          echo "Checking .next directory:"
          ls -la .next/
          exit 1
        fi
        echo "✓ Build successful - out directory created"

    - name: List build output
      run: |
        echo "Listing root directory:"
        ls -la
        echo "Checking if out directory exists:"
        if [ -d "out" ]; then
          echo "✓ out directory exists"
          echo "Contents of out directory:"
          ls -la out/
        else
          echo "✗ out directory does not exist"
          echo "Contents of .next directory:"
          ls -la .next/
          echo "Trying to find any build output:"
          find . -name "*.html" -o -name "index.*" | head -10
        fi

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
